// Mixins para responsive design
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
}

// Mixin para flexbox
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Mixin para grid
@mixin grid($columns: 1, $gap: $spacing-md) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Mixin para transiciones
@mixin transition($property: all, $duration: 0.3s, $timing: ease) {
  transition: $property $duration $timing;
}

// Mixin para sombras
@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: $box-shadow;
  } @else if $level == 2 {
    box-shadow: $box-shadow-hover;
  }
}

// Mixin para botones
@mixin button($bg-color: $primary-color, $text-color: $white) {
  background-color: $bg-color;
  color: $text-color;
  padding: $spacing-sm $spacing-md;
  border: none;
  border-radius: $border-radius;
  cursor: pointer;
  @include transition;
  
  &:hover {
    background-color: darken($bg-color, 10%);
  }
} 